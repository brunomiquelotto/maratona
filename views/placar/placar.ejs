<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Maratona de programação</title>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="stylesheet" href="/static/css/bootstrap.min.css">
  <link rel="stylesheet" href="/static/css/main.css">
  <link rel="stylesheet" href="/static/iconfonts/material-icons.css">
  <script src="/static/js/knockout-latest.js"></script>
</head>
<script src="/socket.io/socket.io.js"></script>
<body>
    <aside class="sidebar">
        <ul class="sidebar-menus">
            <li>
                <a href="/placar" class="material-icons">arrow_back</a>
            </li>
        </ul>
    </aside>
    <section class="container-fluid main-content">
      
        <div class="row">
            <div class="col-md-12 mg-t-10">
                <% if (teams.length) { %>
                    <div class="bg-white shadow" style="height: 50px; margin-top: 5px;">
                        <div class="score-item-left">
                            <span class="score-item-position">0</span>
                        </div>
                        <div class="score-item-content">
                            <span>Placar</span>
                            <div class="balloon-list">
                                <div class="balloons">
                                    <%teams[0].questions.forEach(function(question) { %>
                                        <div style="position:relative; width: 22px;">
                                            <span><%=question.Letter%></span>
                                        </div>
                                    <% }); %>
                                </div>
                            </div>
                        </div>
                    </div>
                <% } %>
                <!-- ko foreach: teams -->
                <div class="bg-white shadow" style="height: 50px; margin-top: 5px;">
                    <div class="score-item-left" data-bind="css: $root.positions()[$index()]">
                        <span class="score-item-position" data-bind="text: $index() + 1"></span>
                    </div>
                    <div class="score-item-content">
                        <span data-bind="text: $data.Name"></span>
                        <div class="balloon-list">
                            <div class="balloons">
                                <!-- ko foreach: $data.questions -->
                                    <div style="position:relative; width: 22px;">
                                        <div class="balloon balloon-animation-1" data-bind="style: { 'background-color': $data.Color, display: $data.IsRight ? 'inherit' : 'none' }"></div>
                                        <span style="font-size: 10px; position: absolute; top: -10px;" data-bind="text: ($data.Tries || 0) + '/' + ($data.PenaltyTime || '-')"></span>
                                    </div>
                                <!-- /ko -->
                            </div>
                        </div>
                    </div>
                </div>
                <!-- /ko -->
            </div>
        </div>
    </section>
    <script>
        var viewModel = function(teams, positions, competition) {
            var self = this;
            this.teams = ko.observableArray(teams);
            this.positions = ko.observableArray(positions);
            this.competition = ko.observable(competition);
            this.updateTeams = function(teams) {
                self.teams(teams.sort(sort));
            };
        };

        var socket = io();
        socket.on('update_score', function(payload) {
            vm.updateTeams(payload.items);
        });

        const sort = (a, b) => {
            let aSuccesses = a.questions.filter(question => question.IsRight).length;
            let bSuccesses = b.questions.filter(question => question.IsRight).length;
            
            if (bSuccesses != aSuccesses) {
                return bSuccesses - aSuccesses;
            }
            
            if (aSuccesses == 0) {
                return 0;
            }

            let aPenaltyTime = a.questions
                .filter(question => question.IsRight)
                .reduce((accumulator, current) => accumulator + (current.PenaltyTime ? current.PenaltyTime : 0), 0);
            let bPenaltyTime = b.questions
                .filter(question => question.IsRight)
                .reduce((accumulator, current) => accumulator + (current.PenaltyTime ? current.PenaltyTime : 0), 0);

            return  aPenaltyTime - bPenaltyTime;
        };
        
        var vm = new viewModel(<%-JSON.stringify(teams);%>, <%- JSON.stringify(positions) %>);
        ko.applyBindings(vm);
    </script>
</body>
</html>